{"version":3,"sources":["../src/index.js"],"names":["port","server","app","listen","process","env","PORT","address","console","log","get","req","res","send"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,OAAO,IAAb;AACA,IAAIC,SAASC,SAAIC,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBN,IAA/B,EAAqC,YAAY;AAC5D,MAAIA,OAAOC,OAAOM,OAAP,GAAiBP,IAA5B;AACAQ,UAAQC,GAAR,CAAY,yBAAZ,EAAuCT,IAAvC;AACD,CAHY,CAAb;AAIAE,SAAIQ,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,IAAJ,CAAS,KAAT,CAAd;AAAA,CAAb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"index.js","sourcesContent":["import { app, router} from './app';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport { execquery, connection } from './queries';\r\nimport { PasswordCreate, PasswordCompare } from './utils/password';\r\n\r\nconst port = 8080;\r\nvar server = app.listen(process.env.PORT || port, function () {\r\n  var port = server.address().port;\r\n  console.log(\"App now running on port\", port);\r\n});\r\napp.get('/', (req, res) => res.send('ola'))\r\n// const corsOptions = {\r\n//   origin: 'http://localhost:9000',\r\n//   optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\r\n// }\r\n\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\n// app.use(bodyParser.json());\r\n// app.use(cors());\r\n// app.use('/', router);\r\n\r\n// app.listen(port, () => {\r\n//   console.log(`server rodando na portela ${port}`);\r\n// })\r\n\r\n// router.get('/', (req, res) => res.json({ message: 'Funcionando!' }));\r\n\r\n// router.get('/clientes', cors(corsOptions), (req, res) => {\r\n//   execquery('SELECT * FROM tb_users', [], (queryResponse) => {\r\n//     res.json(queryResponse.result);\r\n//     console.log('>>>', queryResponse.result);\r\n//   } );\r\n// })\r\n\r\n// router.get('/cliente/:id', (req, res) => {\r\n//   res.setHeader('Content-Type', 'application/json')\r\n//   console.log(\"req.body\", req);\r\n//   execquery('SELECT * FROM tb_users WHERE IDuser=?', res, [req.params.id]);\r\n// })\r\n\r\n// router.post('/cadastro', (req, res) => {\r\n//   const query = `insert into tb_users (nome, sobrenome, email, senha, ddd, avaliacaoProfissional, IDcategoriaUser, IDservicoUser, oauth_provider, oauth_uid, picture, link, created, modified, locale, gender, codCliente, codClienteEncript) values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`;\r\n//   const arrayValues = [req.body.nome, req.body.sobreNome, req.body.email, PasswordCreate(req.body.senha, 10), '', '', 0, 0, '', '', '', '', '', '', '', '', 0, 0]\r\n  \r\n//   execquery(query, arrayValues, (queryResponse) =>  {\r\n//     if(queryResponse.result.codeResult === 0) {\r\n//       const success = Object.assign(queryResponse.result, {data: null});\r\n//       res.json(success);\r\n//     } else {\r\n//       const error = Object.assign(queryResponse.result, {codeRestult: 1, errorMsg: 'Cadastro não realizado', data: null});\r\n//       res.json(error);\r\n//     }\r\n//     if(!queryResponse.result)\r\n//       queryResponse.con.end();\r\n//   });\r\n// })\r\n\r\n// router.post('/login', (req, res) => {\r\n//   const query = 'SELECT senha FROM tb_users WHERE email = ?';\r\n//   const arrayValues = [req.body.email]\r\n\r\n//   execquery(query, arrayValues, (queryResponse) =>  {\r\n//     let confirmPassword = PasswordCompare(req.body.senha, queryResponse.result.data[0].senha);\r\n\r\n//     if(confirmPassword) {\r\n//       const successPassword = Object.assign(queryResponse.result, {data: null})\r\n//       res.json(successPassword)\r\n//     } else {\r\n//       const errorPassword = Object.assign(queryResponse.result, {codeRestult: 1, errorMsg: 'Senha inválida', data: null});\r\n//       res.json(errorPassword)\r\n//     }\r\n\r\n//     if(!queryResponse.result)\r\n//       queryResponse.con.end();\r\n//   });\r\n\r\n// })"]}