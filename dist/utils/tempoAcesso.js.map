{"version":3,"sources":["../../src/utils/tempoAcesso.js"],"names":["SetTimeEncrypt","setTime","date","Date","tempo","finalTime","getTime","toString","IsValidTime","encryptedText","isValidTime","momomentoAnterior","parseInt","momentoAtual"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,iBAAiB,SAASC,OAAT,GAAkB;;AAErC,QAAIC,OAAO,IAAIC,IAAJ,EAAX;AACA,QAAIC,QAAQ,IAAI,EAAJ,GAAS,KAArB;;AAEA,QAAIC,YAAY,uBAAU,CAACH,KAAKI,OAAL,KAAiBF,KAAlB,EAAyBG,QAAzB,EAAV,CAAhB;;AAGF,WAAQF,SAAR;AACD,CATD;;AAWA,IAAMG,cAAc,SAAdA,WAAc,CAAUC,aAAV,EAAwB;;AAExC,QAAIC,cAAc,KAAlB;;AAEA,QAAIR,OAAO,IAAIC,IAAJ,EAAX;;AAEA,QAAIQ,oBAAoBC,SAAU,uBAAQH,aAAR,CAAV,EAAiC,EAAjC,CAAxB;;AAEA,QAAII,eAAeD,SAASV,KAAKI,OAAL,EAAT,EAAwB,EAAxB,CAAnB;;AAEA,QAAIK,oBAAoBE,YAAxB,EAAqC;AACjCH,sBAAc,IAAd;AACH;;AAGD,WAAOA,WAAP;AAEH,CAjBD;;QAoBIV,c,GAAAA,c;QACAQ,W,GAAAA,W","file":"tempoAcesso.js","sourcesContent":["import { Encrypt,Decrypt  } from './password' \n\nconst SetTimeEncrypt = function setTime(){\n  \n    var date = new Date();\n    var tempo = 1 * 60 * 60000;\n\n    var finalTime = Encrypt(  (date.getTime() + tempo).toString());\n\n  \n  return  finalTime;\n}\n\nconst IsValidTime = function (encryptedText){\n\n    var isValidTime = false;\n    \n    var date = new Date();\n\n    var momomentoAnterior = parseInt( Decrypt(encryptedText),10);\n    \n    var momentoAtual = parseInt(date.getTime(),10);\n\n    if (momomentoAnterior > momentoAtual){\n        isValidTime = true;\n    }\n    \n\n    return isValidTime;\n\n}\n\nexport {\n    SetTimeEncrypt,\n    IsValidTime\n}"]}